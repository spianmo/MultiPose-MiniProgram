"use strict";var s=Object.defineProperty,e=(e,r,a)=>(((e,r,a)=>{r in e?s(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a})(e,"symbol"!=typeof r?r+"":r,a),a);exports.FrameAdapter=class{constructor(s=Number.MAX_SAFE_INTEGER,r=30){e(this,"frameNum",0),e(this,"processFrameNum",0),e(this,"frameGap"),e(this,"frameProcesser"),e(this,"lastProcessTime"),e(this,"maxProcessFrame"),e(this,"currGap",0),e(this,"lastFrameDone",!0),e(this,"maxFrameCB"),this.frameGap=r,this.maxProcessFrame=s}onProcessFrame(s){this.frameProcesser=s}onMaxFrame(s){this.maxFrameCB=s}reset(){this.currGap=0,this.frameNum=0,this.processFrameNum=0}async triggerFrame(s){var e;if(this.frameProcesser&&this.processFrameNum<this.maxProcessFrame&&this.lastFrameDone){if(0===this.frameNum||void 0===this.lastProcessTime)await this.processFrame(s);else{const e=Math.max(Math.round(this.lastProcessTime/this.frameGap),1);this.currGap=e,this.frameNum>=e&&(await this.processFrame(s),this.frameNum=0)}this.frameNum++}this.processFrameNum===this.maxProcessFrame&&(this.processFrameNum++,null==(e=this.maxFrameCB)||e.call(this))}async processFrame(s){if(this.frameProcesser){this.lastFrameDone=!1;const e=Date.now();await this.frameProcesser(s),this.lastFrameDone=!0,this.lastProcessTime=Date.now()-e}this.processFrameNum++}};
